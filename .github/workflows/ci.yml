name: CI and Auto Issue Movement

permissions:
  issues: write
  pull-requests: read

on:
  push:  # Trigger the CI jobs (build and lint) on push
    branches:
      - main
      - prod
      - feature/korak-seed-ui
      - feature/shrine-history-ui
  pull_request:
    types: [closed]  # Trigger the move-issue job only when a PR is closed

jobs:
  # CI Job: Build and Test
  build-and-test:
    if: ${{ github.event_name == 'push' }}  # Run this job only on push events
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: |
          set PYTHONPATH=$PYTHONPATH:. 
          python -m pytest tests/ --junitxml=test-results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml

  # CI Job: Lint Code
  lint:
    if: ${{ github.event_name == 'push' }}  # Run this job only on push events
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install flake8
        run: |
          pip install flake8

      - name: Run flake8 Linter
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  #CI Job: Automate Issue Movement to Done
  move-issue:
  if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true }}
  name: Move Linked Issues to Done
  runs-on: ubuntu-latest

  steps:
    - name: Set up GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    - name: Find Related Issue
      id: find-issue
      run: |
        ISSUE_NUMBER=$(echo "${{ github.event.pull_request.body }}" | grep -oE "#[0-9]+" | head -1 | tr -d "#")
        echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_ENV

    - name: Move Issue to Done
      if: env.issue_number
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Moving issue #${ISSUE_NUMBER} to Done."
        gh issue edit $ISSUE_NUMBER --add-label "Done" --repo ${{ github.repository }}
